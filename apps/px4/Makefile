#
# Copyright 2014, NICTA
#
# This software may be distributed and modified according to the terms of
# the BSD 2-Clause license. Note that NO WARRANTY is provided.
# See "LICENSE_BSD2.txt" for details.
#
# @TAG(NICTA_BSD)
#

# Targets
TARGETS := $(notdir $(SOURCE_DIR)).bin

# Set custom entry point as we are a rootserver and will not be
# started in a standard way
ENTRY_POINT := _sel4_start

# Source files required to build the target
CFILES   := $(patsubst $(SOURCE_DIR)/%,%,$(wildcard $(SOURCE_DIR)/src/*.c))
CFILES   += $(patsubst $(SOURCE_DIR)/%,%,$(wildcard $(SOURCE_DIR)/src/plat/${PLAT}/*.c))
CFILES   += $(patsubst $(SOURCE_DIR)/%,%,$(wildcard $(SOURCE_DIR)/src/arch/${ARCH}/*.c))

# AWH - uORB
UORB_PATH := src/modules/uORB
UORB_FILES += $(UORB_PATH)/uORBDevices_posix.cpp
UORB_FILES += $(UORB_PATH)/uORBManager_posix.cpp
UORB_FILES += $(UORB_PATH)/uORBTest_UnitTest.cpp
UORB_FILES += $(UORB_PATH)/objects_common.cpp
UORB_FILES += $(UORB_PATH)/Publication.cpp
UORB_FILES += $(UORB_PATH)/Subscription.cpp
UORB_FILES += $(UORB_PATH)/uORBUtils.cpp
UORB_FILES += $(UORB_PATH)/uORB.cpp
UORB_FILES += $(UORB_PATH)/uORBMain.cpp
#CXXFILES += $(UORB_FILES)

# CPIO archive
OFILES := archive.o

ASMFILES := $(patsubst $(SOURCE_DIR)/%,%,$(wildcard $(SOURCE_DIR)/src/arch/${ARCH}/*.S))
ASMFILES += $(patsubst $(SOURCE_DIR)/%,%,$(wildcard $(SOURCE_DIR)/src/plat/${PLAT}/*.S))

# Libraries required to build the target
LIBS = c sel4 cpio elf sel4muslcsys sel4vka sel4allocman \
       platsupport sel4platsupport sel4test sel4vspace \
       sel4utils sel4simple utils
ifdef CONFIG_KERNEL_STABLE
LIBS += sel4simple-stable
else
LIBS += sel4simple-default
endif

# extra cflag for sel4test
CFLAGS += -Werror -g
ifdef CONFIG_X86_64
CFLAGS += -mno-sse
endif

include $(SEL4_COMMON)/common.mk

# targets to generate CPIO archive of elf files
${COMPONENTS}:
	false

archive.o: ${COMPONENTS}
	$(Q)mkdir -p $(dir $@)
	${COMMON_PATH}/files_to_obj.sh $@ _cpio_archive $^

# AWH - PX4 build includes
#include makefiles/posix/firmware_posix.mk

